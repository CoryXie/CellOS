/* syslog.h - definitions for system error logging */

#ifndef _POSIX_SYSLOG_H
#define _POSIX_SYSLOG_H

#include <stdarg.h>

/* options for openlog() */

#define LOG_PID			(1 << 12)	/* Log the process ID with each message.*/
#define LOG_CONS		(2 << 12)	/* Log to the system console on error. */
#define LOG_ODELAY		(4 << 12)	/* Delay open until syslog() is called. */
#define LOG_NDELAY		(8 << 12)	/* Connect to syslog daemon immediately. */
#define LOG_SERIAL		(16 << 12)	/* dump to serial output as well (not implemented) */
#define LOG_PERROR		(32 << 12)	/* dump to stderr as well */
#define LOG_NOWAIT		(64 << 12)	/* Do not wait for child processes. */


/* Facilities */

#define LOG_KERN		(0 << 3)	/* Reserved for message generated by the system. */
#define LOG_USER		(1 << 3)	/* Message generated by a process. */
#define LOG_MAIL		(2 << 3)    /* Reserved for message generated by mail system.*/
#define LOG_DAEMON		(3 << 3)    /* Reserved for message generated by system daemon.*/
#define LOG_AUTH		(4 << 3)    /* Reserved for message generated by authorization daemon.*/
#define LOG_SYSLOG		(5 << 3)
#define LOG_LPR			(6 << 3)    /* Reserved for message generated by printer system.*/
#define LOG_NEWS		(7 << 3)    /* Reserved for message generated by news system.*/
#define LOG_UUCP		(8 << 3)    /* Reserved for message generated by UUCP system.*/
#define LOG_CRON		(9 << 3)    /* Reserved for message generated by clock daemon.*/
#define LOG_AUTHPRIV	(10 << 3)
#define LOG_FTP			(11 << 3)

/* Reserved for local use. */
#define LOG_LOCAL0		(16 << 3) /* Reserved for local use.*/
#define LOG_LOCAL1		(17 << 3)
#define LOG_LOCAL2		(18 << 3)
#define LOG_LOCAL3		(19 << 3)
#define LOG_LOCAL4		(20 << 3)
#define LOG_LOCAL5		(21 << 3)
#define LOG_LOCAL6		(22 << 3)
#define LOG_LOCAL7		(23 << 3)


/* priorities */

#define LOG_EMERG		0	/* A panic condition was reported to all processes. */
#define LOG_PANIC		LOG_EMERG
#define LOG_ALERT		1	/* A condition that should be corrected immediately. */
#define LOG_CRIT		2	/* A critical condition. */
#define LOG_ERR			3   /* An error message.*/
#define LOG_WARNING		4   /* A warning message.*/
#define LOG_NOTICE		5   /* A condition requiring special handling.*/
#define LOG_INFO		6   /* A general information message.*/
#define LOG_DEBUG		7   /* A message useful for debugging programs.*/

/* Turns a priority into a mask usable for setlogmask() */
#define LOG_MASK(pri)	(1 << (pri))
#define LOG_UPTO(pri)	((1 << ((pri) + 1)) - 1)


#ifdef __cplusplus
extern "C" {
#endif

void  closelog(void);
void  openlog(const char *, int, int);
int   setlogmask(int);
void  syslog(int, const char *, ...);

#ifdef __cplusplus
}
#endif

#endif	/* _POSIX_SYSLOG_H */
